AWSTemplateFormatVersion: 2010-09-09
Description: Centralised security reporting for AWS

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: S3 Configuration
      Parameters:
      - SecurityHQConfigBucket
      - SecurityHQSourceBundleBucket
    - Label:
        default: Security
      Parameters:
      - AccessRestrictionCidr
      - SSHAccessCidr
      - KeyName
    - Label:
        default: Networking
      Parameters:
      - VpcId
      - Subnets
      - TLSCertArn

Parameters:
  SecurityHQSourceBundleBucket:
    Type: String
    Description: S3 bucket containing Security HQ's source bundle
  SecurityHQConfigBucket:
    Type: String
    Description: S3 bucket containing Security HQ's config
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: ID of the VPC Security HQ will run in
  Subnets:
    Description: The subnets in which Security HQ will run
    Type: List<AWS::EC2::Subnet::Id>
  TLSCertArn:
    Description: ARN of a TLS certificate to install on the load balancer
    Type: String
  AccessRestrictionCidr:
    Description: CIDR block from which access to Security HQ should be allowed
    Type: String
  SSHAccessCidr:
    Description: A CIDR from which SSH access to the OWASP SKF instance is allowed
    Type: String
    AllowedPattern: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$
    ConstraintDescription: Parameter should be a CIDR block e.g. "1.2.3.4/32"
  KeyName:
    Description: An ssh keypair to put on the instance
    Type: AWS::EC2::KeyPair::KeyName
  Stage:
    Description: Application stage (e.g. PROD, CODE)
    Type: String
    AllowedValues:
    - PROD
    - CODE
    - DEV

Mappings:
  Constants:
    Stack:
      Value: security
    App:
      Value: security-hq

Resources:
  SecurityHQApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: !Sub security-hq-${Stage}
      Description: AWS Elastic Beanstalk Security HQ Application

  SecurityHQVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    DependsOn:
    - SecurityHQApplication
    Properties:
      Description: AWS ElasticBeanstalk Security HQ Version
      ApplicationName: !Sub security-hq-${Stage}
      SourceBundle:
        S3Bucket: !Ref SecurityHQSourceBundleBucket
        S3Key: !Sub security/${Stage}/security-hq/security-hq.zip

  SecurityHQConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    DependsOn:
    - SecurityHQApplication
    Properties:
      ApplicationName: !Sub security-hq-${Stage}
      Description: AWS ElasticBeanstalk Security HQ Configuration Template
      SolutionStackName: 64bit Amazon Linux 2017.03 v2.5.3 running Java 8
      OptionSettings:
      # configure VPC
      - Namespace: aws:ec2:vpc
        OptionName: VPCId
        Value: !Ref VpcId
      - Namespace: aws:ec2:vpc
        OptionName: Subnets
        Value: !Join [",", {Ref: Subnets}]
      - Namespace: aws:ec2:vpc
        OptionName: ELBSubnets
        Value: !Join [",", {Ref: Subnets}]
      - Namespace: aws:ec2:vpc
        OptionName: AssociatePublicIpAddress
        Value: true

      # load balancing
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: EnvironmentType
        Value: LoadBalanced
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: LoadBalancerType
        Value: application

      - Namespace: aws:elbv2:loadbalancer
        OptionName: SecurityGroups
        Value: !GetAtt LoadBalancerSecurityGroup.GroupId
      - Namespace: aws:elbv2:loadbalancer
        OptionName: ManagedSecurityGroup
        Value: !GetAtt LoadBalancerSecurityGroup.GroupId

      - Namespace: aws:elbv2:listener:443
        OptionName: DefaultProcess
        Value: default
      - Namespace: aws:elbv2:listener:443
        OptionName: Protocol
        Value: HTTPS
      - Namespace: aws:elbv2:listener:443
        OptionName: SSLCertificateArns
        Value: !Ref TLSCertArn
      - Namespace: aws:elbv2:listener:80
        OptionName: DefaultProcess
        Value: default
      - Namespace: aws:elbv2:listener:80
        OptionName: Protocol
        Value: HTTP

      # Beanstalk healthchecks
      - Namespace: aws:elasticbeanstalk:application
        OptionName: Application Healthcheck URL
        Value: HTTP:9000/healthcheck
      - Namespace: aws:elasticbeanstalk:environment:process:default
        OptionName: HealthCheckPath
        Value: /healthcheck
      - Namespace: aws:elasticbeanstalk:environment:process:default
        OptionName: Port
        Value: 9000
      - Namespace: aws:elasticbeanstalk:environment:process:default
        OptionName: HealthyThresholdCount
        Value: 2
      - Namespace: aws:elasticbeanstalk:environment:process:default
        OptionName: MatcherHTTPCode
        Value: 200

      # autoscaling and launch config
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: IamInstanceProfile
        Value: !GetAtt SecurityHQInstanceProfile.Arn
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: SSHSourceRestriction
        Value: !Sub tcp, 22, 22, ${SSHAccessCidr}
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: InstanceType
        Value: t2.micro
      - Namespace: aws:autoscaling:asg
        OptionName: MinSize
        Value: 1
      - Namespace: aws:autoscaling:asg
        OptionName: MaxSize
        Value: 6
      # during dev
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: EC2KeyName
        Value: !Ref KeyName

      # config
      - Namespace: aws:elasticbeanstalk:application:environment
        OptionName: HQ_CONFIG_BUCKET
        Value: !Ref SecurityHQConfigBucket
      - Namespace: aws:elasticbeanstalk:application:environment
        OptionName: HQ_CONFIG_PATH
        Value: !Sub security/${Stage}/security-hq/security-hq.conf
      - Namespace: aws:elasticbeanstalk:application:environment
        OptionName: HQ_CERT_PATH
        Value: !Sub security/${Stage}/security-hq/security-hq-service-account-cert.json

      # running
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: ServiceRole
        Value: !Ref SecurityHQServiceRole
      - Namespace: aws:elasticbeanstalk:healthreporting:system
        OptionName: SystemType
        Value: enhanced
      - Namespace: aws:elasticbeanstalk:managedactions
        OptionName: ManagedActionsEnabled
        Value: true
      - Namespace: aws:elasticbeanstalk:managedactions
        OptionName: PreferredStartTime
        Value: Mon:11:30
      - Namespace: aws:elasticbeanstalk:managedactions:platformupdate
        OptionName: UpdateLevel
        Value: minor
      - Namespace: aws:elasticbeanstalk:managedactions:platformupdate
        OptionName: InstanceRefreshEnabled
        Value: true

      # deployment
      - Namespace: aws:autoscaling:updatepolicy:rollingupdate
        OptionName: RollingUpdateType
        Value: Health
      - Namespace: aws:autoscaling:updatepolicy:rollingupdate
        OptionName: Timeout
        Value: PT10M

  SecurityHQEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      Description: AWS ElasticBeanstalk Security HQ Environment
      ApplicationName: !Ref SecurityHQApplication
      TemplateName: !Ref SecurityHQConfigurationTemplate
      VersionLabel: !Ref SecurityHQVersion
      Tags:
      - Key: Stack
        Value: !FindInMap [ Constants, Stack, Value ]
      - Key: App
        Value: !FindInMap [ Constants, App, Value ]
      - Key: Stage
        Value: !Ref Stage
    DependsOn:
    - SecurityHQApplication
    - SecurityHQVersion
    - SecurityHQConfigurationTemplate

  SecurityHQInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref SecurityHQInstanceRole

  SecurityHQInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: security-hq-instance-policy
        PolicyDocument:
          Statement:
          # needs to be able to fetch artifacts and config from S3
          - Effect: Allow
            Resource:
            - !Sub arn:aws:s3:::${SecurityHQSourceBundleBucket}
            - !Sub arn:aws:s3:::${SecurityHQSourceBundleBucket}/*
            - !Sub arn:aws:s3:::${SecurityHQConfigBucket}
            - !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref SecurityHQConfigBucket
                - "/"
                - !Sub security/${Stage}/security-hq/security-hq.conf
            Action:
            - s3:ListBucketVersions
            - s3:ListBucket
            - s3:GetObjectVersion
            - s3:GetObject
          # allow security HQ to assume roles in watched accounts
          - Effect: Allow
            Resource: "*"
            Action:
            - sts:AssumeRole

  SecurityHQServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - elasticbeanstalk.amazonaws.com
          Action:
          - sts:AssumeRole
          Condition:
            StringEquals:
              sts:ExternalId: elasticbeanstalk
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth
      - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService
      - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: HTTP access to the load balancer from within the Guardian (for now)
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: !Ref AccessRestrictionCidr
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !Ref AccessRestrictionCidr
      Tags:
      - Key: Stack
        Value: !FindInMap [ Constants, Stack, Value ]
      - Key: App
        Value: !FindInMap [ Constants, App, Value ]
      - Key: Stage
        Value: !Ref Stage


Outputs:
  AppUrl:
    Value: !GetAtt SecurityHQEnvironment.EndpointURL
