#!/usr/bin/env bash

set -e

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
ROOT_DIR="${DIR}/.."

red='\x1B[0;31m'
reset='\x1B[0m' # No Color

checkAwsCredentials() {
  STATUS=$(aws sts get-caller-identity --profile security 2>&1 || true)

  if [[ ${STATUS} =~ (ExpiredToken) ]]; then
    echo -e "${red}Credentials for the security profile are expired. Please fetch new credentials and run this again.${reset}"
    exit 1
  elif [[ ${STATUS} =~ ("could not be found") ]]; then
    echo -e "${red}Credentials for the security profile are missing. Please ensure you have the right credentials.${reset}"
    exit 1
  fi
}

checkNodeVersion() {
  runningNodeVersion=$(node -v)
  requiredNodeVersion=$(cat "$ROOT_DIR/.nvmrc")

  if [ "$runningNodeVersion" != "$requiredNodeVersion" ]; then
    echo -e "${red}Using wrong version of Node. Required ${requiredNodeVersion}. Running ${runningNodeVersion}.${reset}"
    exit 1
  fi
}

downloadConfig() {
  BUCKET=$(aws ssm get-parameter --name /account/services/artifact.bucket --profile security --region eu-west-1 | jq -r '.Parameter.Value')
  echo "Downloading configuration from S3 bucket $BUCKET"

  mkdir -p ~/.gu
  aws s3 cp "s3://$BUCKET/security/DEV/security-hq/security-hq-service-account-cert.json" ~/.gu --profile security
  aws s3 cp "s3://$BUCKET/security/DEV/security-hq/security-hq.local.conf" ~/.gu --profile security

  # customise the configuration for current user
  sed -i '' "s/ADD_YOUR_NAME/$(whoami)/" ~/.gu/security-hq.local.conf
}

setupNginx() {
  dev-nginx setup-app "$ROOT_DIR/nginx/nginx-mapping.yml"
}

startDynamoDb() {
  docker-compose up -d
}

initDynamoDb() {
  TABLE_NAME=security-hq-iam-DEV

  STATUS=$(aws dynamodb describe-table --table-name $TABLE_NAME --endpoint-url http://localhost:8000 --region eu-west-1 --profile security 2>&1 || true)

  if [[ ${STATUS} =~ (ResourceNotFoundException) ]]; then
    echo "Creating new ${TABLE_NAME} DynamoDb table"

    aws dynamodb create-table \
      --table-name $TABLE_NAME \
      --attribute-definitions AttributeName=id,AttributeType=S AttributeName=dateNotificationSent,AttributeType=N \
      --key-schema AttributeName=id,KeyType=HASH AttributeName=dateNotificationSent,KeyType=RANGE \
      --billing-mode PAY_PER_REQUEST \
      --endpoint-url http://localhost:8000 \
      --region eu-west-1 \
      --profile security \
      --no-cli-pager
  else
    echo "DynamoDb table $TABLE_NAME exists, no need to create it."
  fi
}

main() {
  checkAwsCredentials
  checkNodeVersion
  downloadConfig
  setupNginx
  startDynamoDb
  initDynamoDb
}

main
